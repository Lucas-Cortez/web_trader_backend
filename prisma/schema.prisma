// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator erd {
  provider                  = "prisma-erd-generator"
  theme                     = "dark"
  includeRelationFromFields = true
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  name     String
  salt     String
  password String
  // apiKeyId String? @db.ObjectId

  profile Profile[]
  Orders  Orders[]
  // ApiKey  ApiKey?   @relation(fields: [apiKeyId], references: [id])
  ApiKey  ApiKey?
}

model ApiKey {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  key    String
  userId String @unique @db.ObjectId

  // User User[]
  user User @relation(fields: [userId], references: [id])
  // User User[]
}

model Profile {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  interval   String
  symbol     String
  inPosition Boolean
  lastOrder  DateTime?
  quantity   Float
  userId     String    @db.ObjectId

  user            User              @relation(fields: [userId], references: [id])
  profilestrategy ProfileStrategy[]
}

model ProfileStrategy {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  profileId  String @db.ObjectId
  strategyId String @db.ObjectId

  profile  Profile  @relation(fields: [profileId], references: [id])
  strategy Strategy @relation(fields: [strategyId], references: [id])
}

model Strategy {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  tag         String
  name        String
  title       String
  description String

  profilestrategy ProfileStrategy[]
}

model Orders {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  value       Float
  trade       String
  symbol      String
  profileName String
  createdAt   DateTime
  userId      String   @db.ObjectId

  user User @relation(fields: [userId], references: [id])
}

// model Symbol {
//   id     String @id @default(auto()) @map("_id") @db.ObjectId
//   symbol String

//   SymbolInterval SymbolInterval[]
// }

// model Interval {
//   id       String @id @default(auto()) @map("_id") @db.ObjectId
//   interval String

//   SymbolInterval SymbolInterval[]
// }
